dsn := postgres://$(DB_USER):$(DB_PASS)@$(DB_HOST):$(DB_PORT)

pg_conn := $(dsn)/$(DB_NAME)?sslmode=disable
pg_conn_dev:= $(dsn)/dev?sslmode=disable

atlas_img := arigaio/atlas
atlas_tag := 0.10.0-alpine
atlas := docker run --rm --net=host --volume=$(PWD)/schemas:/schemas $(atlas_img):$(atlas_tag)


# Alternative is to install this, but using the docker image is preferred.
atlas-install:
	@go install ariga.io/atlas/cmd/atlas@latest


atlas-help:
	@$(atlas) --help


atlas-hash:
	@$(atlas) migrate hash --dir=file://schemas


# Computes the diff between the target db with the local schemas.
# We exclude the table generated by atlas to store the migration revision, atlas_schema_revisions
atlas-diff: atlas-hash
	@$(atlas) schema diff \
		--from $(pg_conn) \
		--to file://schemas \
		--dev-url $(pg_conn_dev) \
		--exclude 'atlas_schema_revisions' > diff.sql


# Applies the migration.
atlas-migrate: atlas-hash
	@$(atlas) schema apply \
		--url $(pg_conn) \
		--to file://schemas \
		--dev-url $(pg_conn_dev) \
		--exclude 'atlas_schema_revisions' \
		--auto-approve


atlas-migrate-dry-run: atlas-hash
	@$(atlas) schema apply \
		--url $(pg_conn) \
		--to file://schemas \
		--dev-url $(pg_conn_dev) \
		--exclude 'atlas_schema_revisions' \
		--dry-run


# Check database schemas.
atlas-inspect:
	@$(atlas) schema inspect --url $(pg_conn) --schema public --format '{{ sql . }}'
